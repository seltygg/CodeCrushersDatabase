# Generated by Django 4.2.7 on 2023-11-29 00:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('accountid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('accountemail', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('accountpassword', models.CharField(blank=True, max_length=255, null=True)),
                ('accountphonenum', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('accountdate', models.DateField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('accountlogofilepath', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Advertisements',
            fields=[
                ('advertisementid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('advertisementtype', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'advertisements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Applies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobid', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'applies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('codename', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.CharField(blank=True, max_length=254, null=True)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Certificates',
            fields=[
                ('certificateid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('topic', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'certificates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CertMaterials',
            fields=[
                ('fileid', models.CharField(max_length=10, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'cert_materials',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('courseid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('coursename', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'courses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(blank=True, max_length=200, null=True)),
                ('action_flag', models.IntegerField()),
                ('change_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField(blank=True, null=True)),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmploymentRecord',
            fields=[
                ('employmentrecordid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('workbegindate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'employment_record',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('groupid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('grouptype', models.CharField(blank=True, max_length=255, null=True)),
                ('joinrequests', models.BigIntegerField(blank=True, null=True)),
                ('groupname', models.CharField(max_length=255)),
                ('members', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('imageid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('imagelocation', models.CharField(blank=True, max_length=255, null=True)),
                ('imageformat', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'images',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceOrders',
            fields=[
                ('invoiceid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('paymentamount', models.FloatField(blank=True, null=True)),
                ('billingcycle', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'invoice_orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('jobid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('companyname', models.CharField(blank=True, max_length=255, null=True)),
                ('jobtitle', models.CharField(max_length=255)),
                ('jobcategory', models.CharField(blank=True, max_length=20, null=True)),
                ('min_salary', models.FloatField(blank=True, null=True)),
                ('max_salary', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'jobs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lessons',
            fields=[
                ('lessonid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('difficulty', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'lessons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('messageid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('msgtimestamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('organizationid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('organizationname', models.CharField(blank=True, max_length=255, null=True)),
                ('organizationlocation', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'organizations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pages',
            fields=[
                ('pageid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('publicationdate', models.DateField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
                ('pageurl', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'pages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paymenttypes',
            fields=[
                ('paymentid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('paymentname', models.CharField(blank=True, max_length=50, null=True)),
                ('paymenttype', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'paymenttypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostComments',
            fields=[
                ('commentid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('commenttimestamp', models.DateTimeField()),
                ('commentlength', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'post_comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('postid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('posttimestamp', models.DateTimeField(blank=True, null=True)),
                ('visibility', models.CharField(blank=True, max_length=255, null=True)),
                ('posttype', models.CharField(blank=True, max_length=255, null=True)),
                ('likecount', models.BigIntegerField(blank=True, null=True)),
                ('sharecount', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'posts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Quizzes',
            fields=[
                ('quizid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('passingscore', models.FloatField(blank=True, null=True)),
                ('questions', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'quizzes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reactions',
            fields=[
                ('reactiontypeid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('reactionname', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'reactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('resultid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('takes', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'results',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('settingid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('settingname', models.CharField(blank=True, max_length=255, null=True)),
                ('settingdesc', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriptiontype',
            fields=[
                ('submodelid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('subscriptiontype', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'subscriptiontype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('tagid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('tagname', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('tagtype', models.CharField(blank=True, max_length=255, null=True)),
                ('tagdesc', models.CharField(blank=True, max_length=255, null=True)),
                ('tagtimestamp', models.DateTimeField(blank=True, null=True)),
                ('tagcategory', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teachers',
            fields=[
                ('teacherid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('bio', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'teachers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Uploads',
            fields=[
                ('uploadid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('uploadformat', models.CharField(blank=True, max_length=255, null=True)),
                ('uploadlocation', models.CharField(blank=True, max_length=255, null=True)),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'uploads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountAddresses',
            fields=[
                ('accountid', models.OneToOneField(db_column='accountid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.accounts')),
                ('addressstreet', models.CharField(blank=True, max_length=255, null=True)),
                ('addresscity', models.CharField(blank=True, max_length=255, null=True)),
                ('addressstate', models.CharField(blank=True, max_length=255, null=True)),
                ('addresscountry', models.CharField(blank=True, max_length=255, null=True)),
                ('addresszipcode', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'account_addresses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('postid', models.OneToOneField(db_column='postid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.posts')),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('articletitle', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'article',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('paymentid', models.OneToOneField(db_column='paymentid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.paymenttypes')),
                ('accountid', models.CharField(blank=True, max_length=10, null=True)),
                ('paymentname', models.CharField(blank=True, max_length=50, null=True)),
                ('paymenttype', models.CharField(blank=True, max_length=50, null=True)),
                ('backacctnum', models.FloatField(blank=True, null=True, unique=True)),
            ],
            options={
                'db_table': 'bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Choose',
            fields=[
                ('tagid', models.OneToOneField(db_column='tagid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.tags')),
            ],
            options={
                'db_table': 'choose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Companies',
            fields=[
                ('companyaccountid', models.OneToOneField(db_column='companyaccountid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.accounts')),
                ('companyname', models.CharField(blank=True, max_length=255, null=True)),
                ('numberemp', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'companies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contain',
            fields=[
                ('fileid', models.OneToOneField(db_column='fileid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.certmaterials')),
            ],
            options={
                'db_table': 'contain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Creditcard',
            fields=[
                ('paymentid', models.OneToOneField(db_column='paymentid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.paymenttypes')),
                ('accountid', models.CharField(blank=True, max_length=10, null=True)),
                ('paymentname', models.CharField(blank=True, max_length=50, null=True)),
                ('paymenttype', models.CharField(blank=True, max_length=50, null=True)),
                ('ccnum', models.FloatField(blank=True, null=True, unique=True)),
            ],
            options={
                'db_table': 'creditcard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('postid', models.OneToOneField(db_column='postid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.posts')),
                ('name', models.CharField(max_length=255)),
                ('eventdescription', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('currdate', models.DateField(blank=True, null=True)),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
                ('eventlocation', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Followings',
            fields=[
                ('followeepageid', models.OneToOneField(db_column='followeepageid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='followings_followeepageid_set', serialize=False, to='User.pages')),
                ('timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'followings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Free',
            fields=[
                ('submodelid', models.OneToOneField(db_column='submodelid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.subscriptiontype')),
                ('subscriptiontype', models.CharField(blank=True, max_length=50, null=True)),
                ('adpreferences', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'free',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupTags',
            fields=[
                ('groupid', models.OneToOneField(db_column='groupid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.groups')),
            ],
            options={
                'db_table': 'group_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualUsers',
            fields=[
                ('useraccountid', models.OneToOneField(db_column='useraccountid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.accounts')),
                ('fname', models.CharField(max_length=255)),
                ('lname', models.CharField(max_length=255)),
                ('gender', models.CharField(blank=True, max_length=2, null=True)),
                ('usertype', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'individual_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('postid', models.OneToOneField(db_column='postid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.posts')),
            ],
            options={
                'db_table': 'link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Premium',
            fields=[
                ('submodelid', models.OneToOneField(db_column='submodelid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.subscriptiontype')),
                ('subscriptiontype', models.CharField(blank=True, max_length=50, null=True)),
                ('billingdate', models.DateField(blank=True, null=True)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'premium',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReactsTo',
            fields=[
                ('messageid', models.OneToOneField(db_column='messageid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.messages')),
            ],
            options={
                'db_table': 'reacts_to',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SettingDetails',
            fields=[
                ('accountid', models.OneToOneField(db_column='accountid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.accounts')),
                ('timechanged', models.DateTimeField()),
                ('settingchanged', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'setting_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teach',
            fields=[
                ('teacherid', models.OneToOneField(db_column='teacherid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.teachers')),
            ],
            options={
                'db_table': 'teach',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherExpertise',
            fields=[
                ('teacherid', models.OneToOneField(db_column='teacherid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.teachers')),
                ('expertise', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'teacher_expertise',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('messageid', models.OneToOneField(db_column='messageid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.messages')),
                ('msgtext', models.CharField(blank=True, max_length=255, null=True)),
                ('tstatus', models.CharField(blank=True, max_length=255, null=True)),
                ('multimediamessage', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comprises',
            fields=[
                ('accountid', models.OneToOneField(db_column='accountid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.individualusers')),
            ],
            options={
                'db_table': 'comprises',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Connections',
            fields=[
                ('senderid', models.OneToOneField(db_column='senderid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.individualusers')),
                ('ctimestamp', models.DateTimeField()),
                ('greeting', models.CharField(blank=True, max_length=255, null=True)),
                ('cstatus', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'connections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('employeeid', models.OneToOneField(db_column='employeeid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.individualusers')),
                ('jobtitle', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'employees',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employers',
            fields=[
                ('employerid', models.OneToOneField(db_column='employerid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.individualusers')),
                ('companyname', models.CharField(blank=True, max_length=255, null=True)),
                ('sponsorship', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'employers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('employerid', models.OneToOneField(db_column='employerid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.individualusers')),
            ],
            options={
                'db_table': 'interview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JobSeekers',
            fields=[
                ('jobseekerid', models.OneToOneField(db_column='jobseekerid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.individualusers')),
                ('roleinterested', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'job_seekers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostLikes',
            fields=[
                ('useraccountid', models.OneToOneField(db_column='useraccountid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.individualusers')),
                ('liketype', models.CharField(blank=True, max_length=255, null=True)),
                ('liketimestamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'post_likes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scores',
            fields=[
                ('attemptid', models.CharField(max_length=10)),
                ('useraccountid', models.OneToOneField(db_column='useraccountid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.individualusers')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViewsCount',
            fields=[
                ('viewedaccountid', models.OneToOneField(db_column='viewedaccountid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.individualusers')),
                ('viewtype', models.CharField(blank=True, max_length=255, null=True)),
                ('vctimestamp', models.DateTimeField()),
                ('vname', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'views_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('applicationid', models.OneToOneField(db_column='applicationid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.jobseekers')),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('dateapplied', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'applications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FillOut',
            fields=[
                ('applicationid', models.OneToOneField(db_column='applicationid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='User.applications')),
                ('jobtitle', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'fill_out',
                'managed': False,
            },
        ),
    ]
